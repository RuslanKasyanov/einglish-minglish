#!/usr/bin/env node
const config = require('./../libs/config'),
    app = require('../app'),
    debug = require('debug')('english-minglish:server');

let port = normalizePort(config.get('port'));

/**
 * Bind handlers
 */

app.on('error', onError);
app.on('listening', onListening);
app.listen(port);

function normalizePort(val) {
    let port = parseInt(val, 10);
    if (!isNaN(port) && port >= 0) {
        return port;
    }
    throw  new SyntaxError("Bad config port");
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    let bind;
    if (error.syscall !== 'listen') {
        throw error;
    }
    bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    let address = server.address(),
        bind = typeof address === 'string' ? 'pipe ' + address : 'port ' + address.port;
    debug('Listening on ' + bind);
}
